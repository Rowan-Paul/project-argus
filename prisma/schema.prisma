datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  history       history[] @relation("historyTousers")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model movies {
  id       Int       @unique @default(autoincrement())
  title    String    @db.VarChar
  year     Int       @default(dbgenerated("date_part('year'::text, CURRENT_DATE)"))
  overview String    @db.VarChar
  tmdb_id  Int?      @unique
  history  history[]

  @@unique([title, year])
}

model history {
  id         Int       @unique @default(autoincrement())
  datetime   DateTime? @db.Timestamptz(6)
  user_id    String
  movie_id   Int?
  episode_id Int?
  episodes   episodes? @relation(fields: [episode_id], references: [id])
  movies     movies?   @relation(fields: [movie_id], references: [id])
  users      User      @relation("historyTousers", fields: [user_id], references: [id])
}

model shows {
  id       Int       @unique @default(autoincrement())
  name     String    @db.VarChar
  overview String    @db.VarChar
  tmdb_id  Int?      @unique
  year     Int       @default(dbgenerated("date_part('year'::text, CURRENT_DATE)"))
  seasons  seasons[]

  @@unique([name, year])
}

model seasons {
  id            Int        @unique @default(autoincrement())
  show_id       Int
  name          String     @db.VarChar
  overview      String     @db.VarChar
  season_number Int
  episode_count Int
  air_date      DateTime   @db.Timestamp(6)
  tmdb_id       Int?       @unique
  shows         shows      @relation(fields: [show_id], references: [id])
  episodes      episodes[]

  @@unique([show_id, name])
  @@unique([show_id, season_number])
}

model episodes {
  id             Int       @unique @default(autoincrement())
  name           String    @db.VarChar
  overview       String    @db.VarChar
  season_id      Int
  tmdb_id        Int?
  air_date       DateTime  @db.Timestamp(6)
  episode_number Int
  seasons        seasons   @relation(fields: [season_id], references: [id])
  history        history[]
}
